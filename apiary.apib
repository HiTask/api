FORMAT: 1A
HOST: https://secure.hitask.com/api2/

# hiTask API

All calls require api_key parameter.

    
# Group User Authentication Flow

Operations related to current user's account: authenticate, sign up, etc.

## Authenticate [/user/authenticate{login,password}]
### Authenticate [GET]

Authenticate user using user name and password


+ Parameters

    + login ... user name
    + password ... md5 hashed password


+ Request
    + Body
    
            {
                "api_key" : myapikey;
                login : john;
                password : XXXXXXXXX;
            }


+ Response 200 (application/json)
    + Body
    
            [{
                id : 12345678;
                level : 300;
                "session_id" : "e0f93451-5ad6-4550-b991-efb0ce1e271b";
            }]



        

## Sign Out [/user/signout{session_id}]
### Sign Out [GET]

End current session, Close user's session.

+ Parameters
    + session_id (required, hash, `e0f93451-5ad6-4550-b991-efb0ce1e271b`) ... session token.

+ Response 200 (application/json)

# Group User

Information about user's account, etc.

## User [/user]

+ Model (application/json)
    ```js

    {
      "class": [ "message" ],
      "properties": { 
            "message": "Hello World!" 
      },
      "links": [
            { "rel": "self" , "href": "/message" }
      ]
    }
   ```         

### get current user account information [GET]


+ Response 200 (application/json)

            {
                businessId : 123;
                businessLevel: 100;
                email:"name@gmail.com";
                emailConfirmed : "name@gmail.com";
                id : 123;
                isOnline : 1;
                level : 0;
                login : john;
                firstName : Mick;
                lastName : Johnson;
            }

# Group Item

Operations with items: tasks, projects, notes, files, etc.

## Item [/item]

tasks, projects, notes, files, etc.

+ Model (application/json)

    ```json
    {
      "id": 123000,
      "guid": "e0f93451-5ad6-4550-b991-efb0ce1e271b",
      "title": "This is a title",
      "message": "Hello World!" ,
      "completed": 0,
      "color": 0,
      "user_id": 123000,
      "category":1,
      "color_value":" #ffffff",
      "location": {"longitude":123.1234567,"latitude":-4.0987654321,"address":"123 Some street"}
    }
   ``` 
   
### Get all items [GET]

This method will return array of all items: tasks, events, files including projects

+ Response 200
    
    [Item][]

### Create new Item [POST]

+ Response 200

### Modify Item [PUT]

+ Response 200

    + Description  operation successful
 
+ Response 404 
   + Description  Â item not found. It may be already deleted or not visible to current user.

+ Response 403 
    + Description  not authorised

### DELETE 
    
+ Response 200 

 
+ Response 404 

    + Description item not found. It may be already deleted or not visible to current user.

+ Response 403 

## Get items since time [/item/since{timestamp}]
### Get items modified since specified time [GET] 

+ Parameters
    + timestamp ... timestamp
    
+ Response 200
    
    [Item][]

## Item's history [/item/history?id={item_id}]
### Get item's history and comments [GET] 

+ Response 200

## Add comment to item [/item/comment]
### Add comment [POST]

+ Response 200

### Delete comment [DELETE]

+ Response 200

# Group Contact


## Contact [/contact]

Operations with user's contacts: add, remove, list contacts

+ Model (application/json)

        ```json
        {
            email: "user@email.com"
            emailConfirmed: "user@email.com"
            firstName: "John"
            id: 123
            isOnline: false
            lastName: "Jackson"
            level: 100
            login: "john"
            pictureHash: "267744510460b6ec63453483f725252"
            subscription: "BOTH"
        }
        ```
      
### Add contact [POST]

+ Response 200

### Delete [DELETE]

+ Response 200

## Get all contacts [/contact{includeSelf}]
### Get all contacts [GET]

+ Parameters
    + includeSelf (0 or 1) ... Include current user in response.
    
+ Response 200
    
    [Contact][]



## Search [/contact/search]
### Search [GET]

+ Response 200

    [Contact][]

## Invite [/contact/invite]
### Invite [GET]

+ Response 200

## Approve invitation [/contact/approve]
### Approve invitation or connection [GET]

+ Response 200

## Add contact to Business account [/contact/addtobusiness]
### Add member [GET]
add contact as member of Business account

+ Response 200

## Remove contact from Business account [/contact/removefrombusiness]

### Remove member [GET]

+ Response 200


